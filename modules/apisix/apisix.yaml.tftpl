routes:
  - uri: /*
    host: ${host_docs}
    service_id: 1001
    plugins:
      basic-auth: {}
  - uri: /*
    host: ${host_yatai}
    upstream:
      type: roundrobin
      nodes:
        "${yatai_proxy_node}": 1
    plugins:
      authz-keycloak:
        token_endpoint: ${keycloak_token_endpoint}
        client_id: ${keycloak_client_id}
        client_secret: ${keycloak_client_secret}
        permissions: ["${keycloak_permissions_yatai}"]
        ssl_verify: false
        password_grant_token_generation_incoming_uri: /api/token
      cors:
        allow_origins: ${cors_allow_origins}
        allow_credential: false
  - uri: /docs
    host: ${host_moderate_api}
    service_id: 1002
  - uri: /openapi.json
    host: ${host_moderate_api}
    service_id: 1002
  - uri: /*
    host: ${host_moderate_api}
    vars: [[uri, ~~, public(\/|$)]]
    service_id: 1002
    enable_websocket: true
  - uri: /*
    host: ${host_moderate_api}
    service_id: 1002
    enable_websocket: true
    plugins:
      authz-keycloak:
        token_endpoint: ${keycloak_token_endpoint}
        client_id: ${keycloak_client_id}
        client_secret: ${keycloak_client_secret}
        permissions: ["${keycloak_permissions_moderate_api}"]
        ssl_verify: false
        password_grant_token_generation_incoming_uri: /api/token
      cors:
        allow_origins: ${cors_allow_origins}
        allow_credential: false
services:
  - id: 1001
    upstream_id: 2001
  - id: 1002
    upstream_id: 2002
upstreams:
  - id: 2001
    nodes:
      "docs-service.docs.svc.cluster.local:8080": 1
    type: roundrobin
  - id: 2002
    nodes:
      "${moderate_api_node}": 1
    type: roundrobin
consumers:
  - username: docs
    plugins:
      basic-auth:
        username: docs
        password: ${docs_basic_auth_password}
#END
